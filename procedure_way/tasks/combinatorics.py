""" 5) Комбинаторика"""

import random
import math
from sympy import binomial, subfactorial


def generate_combinatorics(diff):
    """
    Генерирует задачу по решению задач темы 5) Комбинаторика

    При diff == 1 - базовые задачи на сочетания - выбор k объектов из n без учета порядка
    При diff == 2 - задачи на круговые перестановки
    При diff == 3 - задачи на беспорядки - деранжировки

    Для каждой сгенерированной задачи: текст вопроса, правильный ответ, подсказка и объяснение.
    """
    if diff == 1:
        n = random.randint(5, 8)
        k = random.randint(1, min(n, 3))  # k должно быть <= n
        ans = binomial(n, k)
        text = f"Сколько способов выбрать {k} объектов из {n} без учета порядка (сочетания)?"
        hint = "Используйте формулу для сочетаний: C(n, k) = n! / (k! * (n-k)!)."
        explanation = f"Количество способов выбрать {k} объектов из {n} без учета порядка равно C({n}, {k}) = {math.factorial(n)} / ({math.factorial(k)} * {math.factorial(n - k)}) = {ans}."
    elif diff == 2:
        n = random.randint(4, 6)
        ans = math.factorial(n - 1)
        text = f"Сколько уникальных круговых перестановок можно образовать из {n} элементов?"
        hint = "Для круговых перестановок один элемент считается фиксированным."
        explanation = f"Количество круговых перестановок для {n} элементов равно (n-1)! = ({n}-1)! = {math.factorial(n - 1)} = {ans}."
    else:
        n = random.randint(4, 7)
        ans = subfactorial(n)
        text = f"Сколько существует беспорядков (деранжировок) для {n} элементов?"
        hint = "Используйте функцию субфакториала (беспорядка)."
        explanation = f"Беспорядок (деранжировка) — это перестановка, в которой ни один элемент не остается на своем исходном месте. Количество беспорядков для {n} элементов обозначается !n и равно {ans}."

    return {'text': text, 'answer': ans, 'params': {}, 'hint': hint, 'explanation': explanation}